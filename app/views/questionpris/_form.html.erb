<div class="row">
  <div class="col-xl-12">

    <div id="panel-2" class="panel">

      <div class="panel-container show">

        <div class="panel-content p-0">
          <%= form_with(model: questionpri, local: true,:html => {class:'needs-validation',novalidate:''}) do |f| %>
            <div class="panel-content">
              <div class="form-row form-group">
                <div class="col-md-6 mb-3">
                  <label class="form-label" for="validationCustom03">任务优先级 <span class="text-danger">*</span></label>
                  <%= f.text_field :pri,class:"form-control",required:'' %>
                  <div class="invalid-feedback">
                    任务优先级不能为空
                  </div>
                </div>



                <div class="col-12">

                  <div class="custom-control custom-checkbox">


                    <%= f.check_box :isdefault,  class:'custom-control-input' %>
                    <label class="custom-control-label" for="questionpri_isdefault">默认选择 </label>
                    <div class="invalid-feedback">

                    </div>
                  </div>

                </div>
              </div>





            </div>
            <div class="panel-content border-faded border-left-0 border-right-0 border-bottom-0 d-flex flex-row align-items-center">

              <div class="d-flex col-md-6 mb-3">
                <button class="btn btn-primary ml-auto" type="submit">提交</button>
              </div>
            </div>
          <% end %>

        </div>
      </div>
    </div>

  </div>

</div>


<script>
    // Example starter JavaScript for disabling form submissions if there are invalid fields
    (function() {
        'use strict';
        window.addEventListener('load', function() {
            // Fetch all the forms we want to apply custom Bootstrap validation styles to
            var forms = document.getElementsByClassName('needs-validation');
            // Loop over them and prevent submission
            var validation = Array.prototype.filter.call(forms, function(form) {
                form.addEventListener('submit', function(event) {
                    if (form.checkValidity() === false) {
                        event.preventDefault();
                        event.stopPropagation();
                    }
                    form.classList.add('was-validated');
                }, false);
            });
        }, false);
    })();
</script>